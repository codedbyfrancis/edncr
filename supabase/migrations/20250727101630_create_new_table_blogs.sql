create table "public"."blogs" (
    "id" bigint generated by default as identity not null,
    "category" character varying default 'main'::character varying,
    "sub_category" character varying,
    "title" character varying not null,
    "sub_title" character varying,
    "content" text not null,
    "featured_image" character varying,
    "user_id" uuid not null,
    "approved_by_user_id" uuid not null,
    "modified_at" timestamp with time zone,
    "approved_at" timestamp with time zone default now(),
    "created_at" timestamp with time zone default now(),
    "status" pages_status default 'editing'::pages_status
);


alter table "public"."blogs" enable row level security;

CREATE UNIQUE INDEX blogs_pkey ON public.blogs USING btree (id);

alter table "public"."blogs" add constraint "blogs_pkey" PRIMARY KEY using index "blogs_pkey";

alter table "public"."blogs" add constraint "blogs_approved_by_user_id_fkey" FOREIGN KEY (approved_by_user_id) REFERENCES auth.users(id) ON UPDATE CASCADE not valid;

alter table "public"."blogs" validate constraint "blogs_approved_by_user_id_fkey";

alter table "public"."blogs" add constraint "blogs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE not valid;

alter table "public"."blogs" validate constraint "blogs_user_id_fkey";

grant delete on table "public"."blogs" to "anon";

grant insert on table "public"."blogs" to "anon";

grant references on table "public"."blogs" to "anon";

grant select on table "public"."blogs" to "anon";

grant trigger on table "public"."blogs" to "anon";

grant truncate on table "public"."blogs" to "anon";

grant update on table "public"."blogs" to "anon";

grant delete on table "public"."blogs" to "authenticated";

grant insert on table "public"."blogs" to "authenticated";

grant references on table "public"."blogs" to "authenticated";

grant select on table "public"."blogs" to "authenticated";

grant trigger on table "public"."blogs" to "authenticated";

grant truncate on table "public"."blogs" to "authenticated";

grant update on table "public"."blogs" to "authenticated";

grant delete on table "public"."blogs" to "service_role";

grant insert on table "public"."blogs" to "service_role";

grant references on table "public"."blogs" to "service_role";

grant select on table "public"."blogs" to "service_role";

grant trigger on table "public"."blogs" to "service_role";

grant truncate on table "public"."blogs" to "service_role";

grant update on table "public"."blogs" to "service_role";


